// Generated by CoffeeScript 1.3.3
var Robot, baseUrl,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

baseUrl = 'js/rdf/robot2012/';

Robot = (function() {

  function Robot() {
    this.addBody = __bind(this.addBody, this);

    this.loadNextBody = __bind(this.loadNextBody, this);

    this.rdfLoadingCallback = __bind(this.rdfLoadingCallback, this);
    this.bodies = [];
    this.joints = [];
    this.isInitialized = false;
    this.bodyQueue = [];
    this.loader = null;
  }

  Robot.prototype.loadRdf = function(rdfUrl) {
    return $.getJSON(rdfUrl, this.rdfLoadingCallback);
  };

  Robot.prototype.rdfLoadingCallback = function(description) {
    console.log('loading description \"' + description.name + '\"');
    this.bodyQueue = this.bodyQueue.concat(description.bodies);
    this.loader = new THREE.JSONLoader();
    return this.loadNextBody();
  };

  Robot.prototype.loadNextBody = function() {
    var path;
    if (this.bodyQueue.length > 0) {
      path = baseUrl + this.bodyQueue[0]['de.fumanoids.message.BodyExternal.path'];
      console.log('adding body #' + this.bodyQueue[0].id);
      this.bodyQueue[0].id + ' loaded from ' + path;
      return this.loader.load(path, this.addBody);
    }
  };

  Robot.prototype.addBody = function(geometry) {
    var body, mesh;
    body = this.bodyQueue[0];
    this.bodyQueue.shift();
    mesh = new THREE.Mesh(geometry, new THREE.MeshFaceMaterial());
    body.mesh = mesh;
    mesh.matrix = matrixFromProto(body.position);
    mesh.matrixAutoUpdate = false;
    mesh.updateMatrixWorld(true);
    scene.add(mesh);
    return this.loadNextBody();
  };

  return Robot;

})();
